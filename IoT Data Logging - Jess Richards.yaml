schemaVersion: 3
meta:
  sourceVersionId: bfe7a824-ee9d-40a1-9a0d-94004bd2b5cb # DO NOT CHANGE - Hex uses this to match up project versions when reimporting the file
  description: This project facilitates viewing data collected by our cohort's fleet of IoT devices
  projectId: 2834e357-d5d4-4708-b9e1-09330554bf9d # DO NOT CHANGE - Unique ID of the project from which this file was generated
  title: IoT Data Logging - Jess Richards
  timezone: null
  appTheme: SYS_PREF
  codeLanguage: PYTHON
  status: null
  categories: []
  castDecimalsDefault: true
  logicQueryCacheTimeout:
    type: disabled
  publishedQueryCacheTimeout:
    type: disabled
  hexType: PROJECT
  allowExecutionReordering: true
  prerunApp: false
  cachePublishedAppState: true
  refreshStalePublishedApp: false
  autoRerunApp: true
projectAssets:
  dataConnections: []
  envVars: []
  secrets: []
sharedAssets:
  secrets: []
  vcsPackages: []
  dataConnections:
    - dataConnectionId: e8480949-7368-449c-b922-66d0c52bbad0 # Supabase (postgres)
  externalFileIntegrations: []
cells:
  - cellType: TEXT
    cellId: 8fe30cfd-30ce-48cf-97c6-03d126b0a0cc # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: h2
          children:
            - text: Learning goals
        - type: p
          children:
            - text: In this notebook, we'll be fetching and displaying sensor data collected by our cohort's fleet of IoT devices.
  - cellType: TEXT
    cellId: b58014c5-0369-4e11-b553-be5e3f41d5bf # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: h3
          children:
            - text: Data overview
        - type: paragraph
          children:
            - text: First, let's talk a little about the structure of the data
        - type: paragraph
          children:
            - text: ""
        - type: paragraph
          children:
            - text: "Our cohort's dataset lives in a Supabase-hosted database table called "
            - code: true
              text: iot
            - text: ". "
        - type: paragraph
          children:
            - text: "Each row in the table represents the data collected by a specific IoT device at a specific moment in time. "
        - type: paragraph
          children:
            - text: "The columns are:"
        - type: ul
          children:
            - type: li
              children:
                - type: lic
                  children:
                    - bold: true
                      text: "id:"
                    - text: " unique (auto-incrementing) identifier for the row"
            - type: li
              children:
                - type: lic
                  children:
                    - bold: true
                      text: "created_at:"
                    - text: " the timestamp when the data was collected"
            - type: li
              children:
                - type: lic
                  children:
                    - bold: true
                      text: "device_id:"
                    - text: " the unqiue identifier of the specific device"
            - type: li
              children:
                - type: lic
                  children:
                    - bold: true
                      text: "content:"
                    - text: " a dictionary of data (a json blob to be specific), with a key for each type of sensor data collected:"
                - type: ul
                  children:
                    - type: li
                      children:
                        - type: lic
                          children:
                            - bold: true
                              text: '"battery_v"'
                            - text: ": Battery voltage (V)"
                            - bold: true
                              text: |-
                                
                                "battery_pct"
                            - text: ": Battery percentage (%)"
                            - bold: true
                              text: |-
                                
                                "co2_ppm":
                            - text: " CO2 concentration, in parts-per-million (ppm)"
                            - bold: true
                              text: |-
                                
                                "humidity_relative":
                            - text: " Relative humidity (%)"
                            - bold: true
                              text: |-
                                
                                "temperature_c":
                            - text: " Temperature (degrees C)"
                            - bold: true
                              text: |-
                                
                                "pm25 standard":
                            - text: " Particulate matter of size <2.5 micrometers concentration (µg/m³)"
                            - bold: true
                              text: |-
                                
                                "pm100 standard":
                            - text: " Particulate matter of size <10.0 micrometers concentration (µg/m³)"
        - type: paragraph
          children:
            - text: ""
        - type: paragraph
          children:
            - text: The "class" devices are located (with us) in Bellingham, WA
        - type: ul
          children:
            - type: li
              children:
                - type: lic
                  children:
                    - text: "jaimecurtis-co2-temperature: indoors on my desk"
            - type: li
              children:
                - type: lic
                  children:
                    - text: "jasoncurtis-co2-temp-hum-revTFT: outdoors in the shade"
            - type: li
              children:
                - type: lic
                  children:
                    - text: "jasoncurtis-co2-airquality: outdoors in the shade"
  - cellType: TEXT
    cellId: 75ce65be-005c-4955-82e9-f7f49617e739 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: h3
          children:
            - text: Coding Level 0-1
        - type: paragraph
          children:
            - text: Run the existing notebook, but play around with selecting different devices and time ranges
        - type: paragraph
          children:
            - text: ""
        - type: paragraph
          children:
            - text: "In the next cells we're going to:"
        - type: ol
          children:
            - type: li
              children:
                - type: lic
                  children:
                    - text: Fetch list of device ids
            - type: li
              children:
                - type: lic
                  children:
                    - text: "Inputs: use Hex input widgets to select a device and a time range"
            - type: li
              children:
                - type: lic
                  children:
                    - text: Fetch the data collected by the selected device over the selected time range
            - type: li
              children:
                - type: lic
                  children:
                    - text: Plot that data
  - cellType: CODE
    cellId: 4b3c88b8-f149-4b85-81e5-ca6b2c690028 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Import Libraries
    config:
      source: |
        import pandas as pd
        import pytz
  - cellType: SQL
    cellId: 1cfaacd7-8dcc-4a38-8d1c-0f548ac5a165 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: "1. Fetch data: Unique device ids"
    config:
      source: |-
        -- In this cell, we're fetching a list of all unique device ids. 
        -- As others in our cohort set up and connect their devices, this list will grow!
        -- You do not need to make changes to this cell.
        select distinct device_id from iot
      dataFrameCell: false
      dataConnectionId: e8480949-7368-449c-b922-66d0c52bbad0
      resultVariableName: device_ids
      useRichDisplay: true
      sqlCellOutputType: PANDAS
      useQueryMode: false
      castDecimals: true
      useNativeDates: true
      outputFilteredResult: true
      allowDuplicateColumns: false
      tableDisplayConfig:
        pageSize: 50
        height: null
        hideIcons: false
        hideIndex: false
        defaultSortColumn: null
        defaultSortIndexColumn: null
        defaultSortDirection: ASC
        conditionalFormatting: null
        calcs: null
        filters: null
        columnProperties:
          - originalName: CATEGORY
            renameTo: null
            size: 114
            wrapText: null
            displayFormat: null
          - originalName: CUSTOMER_ID
            renameTo: null
            size: 137
            wrapText: null
            displayFormat: null
          - originalName: MENU_ITEM
            renameTo: null
            size: 163
            wrapText: null
            displayFormat: null
          - originalName: MENU_ITEM_ID
            renameTo: null
            size: 143
            wrapText: null
            displayFormat: null
          - originalName: ORDERED_AT
            renameTo: null
            size: 196
            wrapText: null
            displayFormat: null
          - originalName: ORDER_DATE
            renameTo: null
            size: 129
            wrapText: null
            displayFormat: null
          - originalName: ORDER_ID
            renameTo: null
            size: 114
            wrapText: null
            displayFormat: null
          - originalName: ORDER_ITEM_ID
            renameTo: null
            size: 149
            wrapText: null
            displayFormat: null
          - originalName: ORDER_STATUS
            renameTo: null
            size: 142
            wrapText: null
            displayFormat: null
          - originalName: PRICE
            renameTo: null
            size: 89
            wrapText: null
            displayFormat: null
          - originalName: device_id
            renameTo: null
            size: 385
            wrapText: null
            displayFormat: null
          - originalName: row-index-0
            renameTo: null
            size: 39
            wrapText: null
            displayFormat: null
        columnOrdering: null
        customColumnOrdering: null
        pinnedColumns: null
        hiddenColumns: null
        pinIndexColumns: false
        showAggregations: false
        columnAggregations: null
  - cellType: MARKDOWN
    cellId: 5248376f-76e6-4afb-80e4-d07f64e1bb5b # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Jess's Assignment Summary 
    config:
      source: |-
        # Goal
        Show the impact of blackout cellular shades. 

        # Strategy 
        Collect temperature and humidity data from:
         1) "Control" sensor - Placed in the middle of the room where shades are always closed 
         2) "Compare" sensor - Placed on the interior of a window, on the sunny side of the shades
         3) Public local historical weather API
         
        Show temperature and relative humidity over time for Control, Compare, Local Weather
        * Indicate meaningful factors like A/C use

        Show differences in temperature and relative humidity between Control and Compare, and Control and Local Weather 

        # Initial Findings
        * The room darkening shades account for an average lower temperature of 1.6 degree F.  
        * During the sunniest periods of the day, the room darkening shades account for an average lower temperature of 3.3 degrees F.  
        * On average, the outdoors is 1 degree cooler, even with the room darkening shades in use.
        * During the sunniest periods of the day, the outdoors is 1.7 degrees warmer (still with the room darkening shades in use). 
        * A/C use produces a significant decrease in humidity 
  - cellType: CODE
    cellId: 55a23cbd-f50a-4c4e-b49c-7d44dc6676cc # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: 2. Inputs
    config:
      source: |-
        # This time, we'll use the built-in Hex input selection widgets to set our input variables.
        # Choose the devices and a time range below:
  - cellType: INPUT
    cellId: 10add66c-006f-43f9-a572-f9b2770c4bda # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Selected device
    config:
      inputType: DROPDOWN
      name: selected_device
      outputType: DYNAMIC
      options:
        valueOptions:
          dfName: device_ids
          columnName: device_id
          variableName: device_ids['device_id']
      defaultValue: jessrichards-temp-hum-airquality
  - cellType: INPUT
    cellId: 2a7cb13d-bb32-422e-88a6-403c17a14b60 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Selected device compare
    config:
      inputType: DROPDOWN
      name: selected_device_compare
      outputType: DYNAMIC
      options:
        valueOptions:
          dfName: device_ids
          columnName: device_id
          variableName: device_ids['device_id']
      defaultValue: jessrichards-temp-hum-experimental
  - cellType: INPUT
    cellId: 25b19271-0df6-42ee-870c-28250c6972c3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Time range start
    config:
      inputType: DATE
      name: time_range_start
      outputType: DATETIME
      options:
        enableTime: true
        showRelativeDates: false
        useDateRange: false
      defaultValue:
        timezoneName: UCT
        isoDateString: 2024-07-25T20:49:00.000+00:00
  - cellType: INPUT
    cellId: ad640a6b-4269-4ae2-9b46-d64a25a9d8ac # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Time range end
    config:
      inputType: DATE
      name: time_range_end
      outputType: DATETIME
      options: null
      defaultValue:
        timezoneName: Etc/UCT
        isoDateString: 2024-08-24T18:49:00.000+00:00
  - cellType: BLOCK
    cellId: 02961343-bd3b-4a42-b85d-6798c2053131 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 356dea02-028f-493c-a737-fd686f5b5d57
        chartCellId: c9e9038e-6b25-440c-85b5-1b62eb7fbc2b
        activeTab: display
      cells:
        - cellType: SQL
          cellId: 356dea02-028f-493c-a737-fd686f5b5d57
          cellLabel: 3. Fetch data from sensor devices
          config:
            source: |
              -- -- In this cell, we fetch all data for the selected device from the selected time range
              -- -- Then we parse the data points out of the "content" cell (json blob), and aggregating hourly by median (50% percentile).
              -- -- You do not need to make changes to this cell.

              -- select
              --     date_trunc('hour', created_at) as hour,
              --     device_id,
              --     -- Temperature sensor data
              --     percentile_cont(0.5) within group (order by (content ->> 'temperature_c')::float) as "Temperature (C) - median",
              --     -- CO2 sensor data (might also be collecting temperature, if no independent temperature sensor)
              --     percentile_cont(0.5) within group (order by (content ->> 'co2_ppm')::float) as "CO2 (ppm) - median",
              --     percentile_cont(0.5) within group (order by (content ->> 'humidity_relative')::float) as "Relative Humidity (%) - median",
              --     -- Air quality (particulate matter) sensor data
              --     percentile_cont(0.5) within group (order by (content ->> 'pm25 standard')::float) as "PM2.5 - median",
              --     percentile_cont(0.5) within group (order by (content ->> 'pm100 standard')::float) as "PM10.0 - median",
              --     -- Battery health data
              --     percentile_cont(0.5) within group (order by (content ->> 'battery_v')::float) as "Battery (V) - median",
              --     percentile_cont(0.5) within group (order by (content ->> 'battery_pct')::float) as "Battery (%) - median"
              -- from iot
              -- where
              --     created_at between {{time_range_start}} and {{time_range_end}}
              --     and device_id = {{selected_device}}
              -- group by 1, 2
              -- order by hour DESC
            dataFrameCell: false
            dataConnectionId: e8480949-7368-449c-b922-66d0c52bbad0
            resultVariableName: hourly_data
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: []
              columnProperties:
                - originalName: Battery (%) - median
                  renameTo: null
                  size: 164
                  wrapText: null
                  displayFormat: null
                - originalName: Battery (V) - median
                  renameTo: null
                  size: 161
                  wrapText: null
                  displayFormat: null
                - originalName: CO2 (ppm)
                  renameTo: null
                  size: 113
                  wrapText: null
                  displayFormat: null
                - originalName: CO2 (ppm) - median
                  renameTo: null
                  size: 161
                  wrapText: null
                  displayFormat: null
                - originalName: PM10.0 - median
                  renameTo: null
                  size: 144
                  wrapText: null
                  displayFormat: null
                - originalName: PM2.5 - median
                  renameTo: null
                  size: 137
                  wrapText: null
                  displayFormat: null
                - originalName: Relative Humidity
                  renameTo: null
                  size: 150
                  wrapText: null
                  displayFormat: null
                - originalName: Relative Humidity (%) - median
                  renameTo: null
                  size: 219
                  wrapText: null
                  displayFormat: null
                - originalName: Temperature (C)
                  renameTo: null
                  size: 143
                  wrapText: null
                  displayFormat: null
                - originalName: Temperature (C) - median
                  renameTo: null
                  size: 190
                  wrapText: null
                  displayFormat: null
                - originalName: avg_co2
                  renameTo: null
                  size: 150
                  wrapText: null
                  displayFormat: null
                - originalName: avg_humidity
                  renameTo: null
                  size: 158
                  wrapText: null
                  displayFormat: null
                - originalName: avg_temperature
                  renameTo: null
                  size: 158
                  wrapText: null
                  displayFormat: null
                - originalName: co2_ppm
                  renameTo: null
                  size: 106
                  wrapText: null
                  displayFormat: null
                - originalName: created_at
                  renameTo: null
                  size: 242
                  wrapText: null
                  displayFormat: null
                - originalName: device_id
                  renameTo: null
                  size: 141
                  wrapText: null
                  displayFormat: null
                - originalName: hour
                  renameTo: null
                  size: 196
                  wrapText: null
                  displayFormat: null
                - originalName: humidity_relative
                  renameTo: null
                  size: 148
                  wrapText: null
                  displayFormat: null
                - originalName: keys
                  renameTo: null
                  size: 125
                  wrapText: null
                  displayFormat: null
                - originalName: max_co2
                  renameTo: null
                  size: 104
                  wrapText: null
                  displayFormat: null
                - originalName: max_humidity
                  renameTo: null
                  size: 132
                  wrapText: null
                  displayFormat: null
                - originalName: min_co2
                  renameTo: null
                  size: 101
                  wrapText: null
                  displayFormat: null
                - originalName: min_humidity
                  renameTo: null
                  size: 129
                  wrapText: null
                  displayFormat: null
                - originalName: min_temperature
                  renameTo: null
                  size: 149
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 24
                  wrapText: null
                  displayFormat: null
                - originalName: temperature (C)
                  renameTo: null
                  size: 141
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: c9e9038e-6b25-440c-85b5-1b62eb7fbc2b
          cellLabel: 3. Fetch data from sensor devices
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: a8c400f7-21dd-4463-b794-d2dee92074d2
                  xAxis:
                    type: datetime
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    timeUnit: yearmonthdatehours
                    dataFrameColumn: hour
                  series:
                    - id: f12942f2-57c3-4955-bb5b-048bcbe3b1d6
                      type: line
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                      dataFrameColumns: []
                      colorOrder: ascending
                      color:
                        type: static
                        color: "#4C78A8"
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      point: false
                      stroke: dashed
                  dataFrame: hourly_data
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: filter_result
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: BLOCK
    cellId: dd8f2012-6d8f-46e0-89f8-64a136385f6c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      blockConfig:
        sqlCellId: 0485b250-3a43-4f6b-93bf-5d471c25fa18
        chartCellId: f37f9d20-0ae3-4f96-92d4-516e0be003d9
        activeTab: preview
      cells:
        - cellType: SQL
          cellId: 0485b250-3a43-4f6b-93bf-5d471c25fa18
          cellLabel: 3.a. Parse Selected Data, Aggregating Hourly by Median (50% Percentile)
          config:
            source: |
              -- -- Parse selected data, aggregating hourly by median (50% percentile)

              -- select
              --     date_trunc('hour', created_at) as hour,
              --     device_id,
              --     -- Temperature sensor data
              --     percentile_cont(0.5) within group (order by (content ->> 'temperature_c')::float) as "Temperature (C) - median",
              --     -- CO2 sensor data (might also be collecting temperature, if no independent temperature sensor)
              --     percentile_cont(0.5) within group (order by (content ->> 'co2_ppm')::float) as "CO2 (ppm) - median",
              --     percentile_cont(0.5) within group (order by (content ->> 'humidity_relative')::float) as "Relative Humidity (%) - median",
              --     -- Air quality (particulate matter) sensor data
              --     percentile_cont(0.5) within group (order by (content ->> 'pm25 standard')::float) as "PM2.5 - median",
              --     percentile_cont(0.5) within group (order by (content ->> 'pm100 standard')::float) as "PM10.0 - median",
              --     -- Battery health data
              --     percentile_cont(0.5) within group (order by (content ->> 'battery_v')::float) as "Battery (V) - median",
              --     percentile_cont(0.5) within group (order by (content ->> 'battery_pct')::float) as "Battery (%) - median"
              -- from iot
              -- where
              --     created_at between {{time_range_start}} and {{time_range_end}}
              --     and device_id = {{selected_device_compare}}
              -- group by 1, 2
              -- order by hour DESC
            dataFrameCell: false
            dataConnectionId: e8480949-7368-449c-b922-66d0c52bbad0
            resultVariableName: hourly_data_2
            useRichDisplay: true
            sqlCellOutputType: PANDAS
            useQueryMode: false
            castDecimals: true
            useNativeDates: true
            outputFilteredResult: true
            allowDuplicateColumns: false
            tableDisplayConfig:
              pageSize: 50
              height: null
              hideIcons: false
              hideIndex: false
              defaultSortColumn: null
              defaultSortIndexColumn: null
              defaultSortDirection: ASC
              conditionalFormatting: null
              calcs: null
              filters: []
              columnProperties:
                - originalName: Battery (%) - median
                  renameTo: null
                  size: 240
                  wrapText: null
                  displayFormat: null
                - originalName: Battery (V) - median
                  renameTo: null
                  size: 240
                  wrapText: null
                  displayFormat: null
                - originalName: CO2 (ppm)
                  renameTo: null
                  size: 113
                  wrapText: null
                  displayFormat: null
                - originalName: CO2 (ppm) - median
                  renameTo: null
                  size: 216
                  wrapText: null
                  displayFormat: null
                - originalName: PM10.0 - median
                  renameTo: null
                  size: 180
                  wrapText: null
                  displayFormat: null
                - originalName: PM2.5 - median
                  renameTo: null
                  size: 168
                  wrapText: null
                  displayFormat: null
                - originalName: Relative Humidity
                  renameTo: null
                  size: 150
                  wrapText: null
                  displayFormat: null
                - originalName: Relative Humidity (%) - median
                  renameTo: null
                  size: 360
                  wrapText: null
                  displayFormat: null
                - originalName: Temperature (C)
                  renameTo: null
                  size: 143
                  wrapText: null
                  displayFormat: null
                - originalName: Temperature (C) - median
                  renameTo: null
                  size: 288
                  wrapText: null
                  displayFormat: null
                - originalName: avg_co2
                  renameTo: null
                  size: 150
                  wrapText: null
                  displayFormat: null
                - originalName: avg_humidity
                  renameTo: null
                  size: 158
                  wrapText: null
                  displayFormat: null
                - originalName: avg_temperature
                  renameTo: null
                  size: 158
                  wrapText: null
                  displayFormat: null
                - originalName: co2_ppm
                  renameTo: null
                  size: 106
                  wrapText: null
                  displayFormat: null
                - originalName: created_at
                  renameTo: null
                  size: 242
                  wrapText: null
                  displayFormat: null
                - originalName: device_id
                  renameTo: null
                  size: 141
                  wrapText: null
                  displayFormat: null
                - originalName: hour
                  renameTo: null
                  size: 196
                  wrapText: null
                  displayFormat: null
                - originalName: humidity_relative
                  renameTo: null
                  size: 148
                  wrapText: null
                  displayFormat: null
                - originalName: keys
                  renameTo: null
                  size: 125
                  wrapText: null
                  displayFormat: null
                - originalName: max_co2
                  renameTo: null
                  size: 104
                  wrapText: null
                  displayFormat: null
                - originalName: max_humidity
                  renameTo: null
                  size: 132
                  wrapText: null
                  displayFormat: null
                - originalName: min_co2
                  renameTo: null
                  size: 101
                  wrapText: null
                  displayFormat: null
                - originalName: min_humidity
                  renameTo: null
                  size: 129
                  wrapText: null
                  displayFormat: null
                - originalName: min_temperature
                  renameTo: null
                  size: 149
                  wrapText: null
                  displayFormat: null
                - originalName: row-index-0
                  renameTo: null
                  size: 24
                  wrapText: null
                  displayFormat: null
                - originalName: temperature (C)
                  renameTo: null
                  size: 141
                  wrapText: null
                  displayFormat: null
              columnOrdering: null
              customColumnOrdering: null
              pinnedColumns: null
              hiddenColumns: null
              pinIndexColumns: false
              showAggregations: false
              columnAggregations: null
        - cellType: CHARTV2
          cellId: f37f9d20-0ae3-4f96-92d4-516e0be003d9
          cellLabel: 3.a. Parse Selected Data, Aggregating Hourly by Median (50% Percentile)
          config:
            height: null
            chartSpec:
              type: layered
              layers:
                - id: a8c400f7-21dd-4463-b794-d2dee92074d2
                  xAxis:
                    type: datetime
                    style:
                      grid:
                        style: solid
                      ticks: {}
                      labels: {}
                    timeUnit: yearmonthdatehours
                    dataFrameColumn: hour
                  series:
                    - id: f12942f2-57c3-4955-bb5b-048bcbe3b1d6
                      type: line
                      axis:
                        type: number
                        style:
                          grid:
                            style: solid
                          ticks: {}
                          labels: {}
                      dataFrameColumns: []
                      colorOrder: ascending
                      color:
                        type: static
                        color: "#4C78A8"
                      opacity:
                        type: static
                        value: 1
                      tooltip:
                        type: auto
                      point: false
                      stroke: dashed
                  dataFrame: hourly_data_2
              settings:
                legend:
                  position: right
                tooltip: true
                selectionEnabled: false
            chartSelection: {}
            colorMappings: {}
            resultVariable: filter_result_7
            outputResult: false
            displayType: CHART
            displayTableConfig: null
  - cellType: CODE
    cellId: 8b2c44d0-cda6-4e2e-91b3-862e2cafca2c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Read Censor Data from Saved CSVs
    config:
      source: |
        #  Data was captured over several weeks from cloud storage
        #  Import CVs of the captured sensor data
        # Compare Sensor
        hourly_data_2_csv = 'raw_sensor-2024-08-13_compare.csv'
        hourly_data_2 = pd.read_csv(hourly_data_2_csv)
        hourly_data_2['hour'] = pd.to_datetime(hourly_data_2['hour']) # Convert to datetime

        # Control Sensor
        hourly_data_csv = 'raw_sensor-2024-08-13_control.csv'
        hourly_data = pd.read_csv(hourly_data_csv)
        hourly_data['hour'] = pd.to_datetime(hourly_data['hour']) # Convert to datetime
  - cellType: CODE
    cellId: 111aa205-9ce2-49ae-9148-dcd7e576ed35 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Convert Date(s) and Time(s) to Standardized ET Format
    config:
      source: |
        # Convert times to Standardized ET Format
        def convert_time_ET(times):

            new_times = pd.to_datetime(times)
            if isinstance(new_times, pd.Series):
                if new_times.dt.tz is None:
                    new_times = times.dt.tz_localize('UTC')
                new_times = new_times.dt.tz_convert('US/Eastern')
            else:    
                if new_times.tzinfo is None:
                    new_times = times.tz_localize('UTC')

                new_times = new_times.tz_convert('US/Eastern')

            return new_times


        time_range_start_ET = convert_time_ET(time_range_start)
        time_range_end_ET = convert_time_ET(time_range_end)
  - cellType: CODE
    cellId: 62032d26-6b92-4562-91ab-c61b9c78e21a # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Reduce Control Data and Compare Data and Merge into Combined Data Frame 
    config:
      source: |-
        # Reduce and clarify data from sensors
        def simplify_sql_to_df(query_results, display): 
            simplifed_df = pd.DataFrame(query_results)
            simplifed_df = simplifed_df[['hour', 'Temperature (C) - median', 'Relative Humidity (%) - median', 'Battery (%) - median']]
            simplifed_df = simplifed_df.rename(
                columns={'Temperature (C) - median': f'{display} Temp (C)', 
                'Relative Humidity (%) - median': f'{display} Humidity (RH%)', 
                'Battery (%) - median':f'{display} Battery (%)'}
                )
            return simplifed_df

        # Create merged data frame of Control and Compare data from reduced data sets
        temp_hum_control_df = simplify_sql_to_df(hourly_data, 'Control')
        temp_hum_compare_df = simplify_sql_to_df(hourly_data_2, 'Compare')

        temp_hum_combined_df = pd.merge(
            temp_hum_control_df[['hour', 'Control Temp (C)', 'Control Humidity (RH%)']], 
            temp_hum_compare_df[['hour', 'Compare Temp (C)', 'Compare Humidity (RH%)']], 
            on='hour'
        )

        temp_hum_combined_df
  - cellType: CODE
    cellId: 3902588e-53c8-43de-a3c4-f29de7d60213 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Convert Control and Compare  Data to Fahrenheit and Eastern Time
    config:
      source: |
        convert_temp_hum_df = temp_hum_combined_df.copy()

        # Convert times to ET
        convert_temp_hum_df['Hour (ET)'] = convert_time_ET(convert_temp_hum_df['hour'])    

        # Convert temperature from Celsius to Fahrenheit
        def convert_temp_F(temperatures):
            new_temperatures = (temperatures * 1.8) + 32
            return new_temperatures

        convert_temp_hum_df['Control Temp (F)'] = convert_temp_F(convert_temp_hum_df['Control Temp (C)'])
        convert_temp_hum_df['Compare Temp (F)'] = convert_temp_F(convert_temp_hum_df['Compare Temp (C)'])
        convert_temp_hum_df
  - cellType: CODE
    cellId: 052ca07e-8f3d-4460-9f4b-edb2f1ca547f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Get Historical Local Weather Data from Open-Meteo
    config:
      source: |
        # Get historical local weather data from Open-Meteo
        lat_api = 40.62993477126549
        lon_api = -74.03587065767233

        import json
        # Avoid API call witn downloaded data

        # import requests

        # date_start_API = time_range_start_ET.date()
        # date_end_API = time_range_end_ET.date()

        # # API endpoint
        # url = f'https://api.open-meteo.com/v1/forecast?latitude={lat_api}&longitude={lon_api}&hourly=temperature_2m,relative_humidity_2m&temperature_unit=fahrenheit&timezone=UTC&start_date={date_start_API}&end_date={date_end_API}'
        # # TODO Don't hard code max date , query for max date. don't pick dates in future as end dates.

        # response = requests.get(url)
        # if response.status_code == 200:
        #     json_data = response.json()
        #     open_meteo_df = pd.DataFrame(json_data)
                
        #     # Save the JSON data to a file
        #     with open('open-meteo_data.json', 'w') as file:
        #         json.dump(json_data, file, indent=4)
        # else:
        #     print(f"Error: {response.status_code}")

        # Use downloaded JSON data
        json_dl_file = open('open-meteo_data_2024-08-13.json')
        json_dl_data = json.load(json_dl_file)
        open_meteo_df = pd.DataFrame(json_dl_data)

        open_meteo_df
  - cellType: CODE
    cellId: a9467810-a1a1-4af4-b8b9-ed3fe9a3ce62 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Reduce and Flatten Temperature and Humidity Data from Open-Meteo 
    config:
      source: |
        # Reduce and flatten Open-Meteo Data
        open_meteo_df_initial = pd.DataFrame(open_meteo_df['hourly'])

        simple_open_meteo_df = pd.DataFrame({
            'time': open_meteo_df_initial['hourly']['time'],
            'temperature_2m': open_meteo_df_initial['hourly']['temperature_2m'],
            'relative_humidity_2m': open_meteo_df_initial['hourly']['relative_humidity_2m']
        })

        simple_open_meteo_df['Hour (ET)'] = convert_time_ET(pd.to_datetime(simple_open_meteo_df['time']))

        simple_open_meteo_df
  - cellType: CODE
    cellId: b15b926d-536a-4049-9473-dd9d1d11bfe3 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Merge Temperatures and Humidity Data from Control and Compare Sensors and Open-Meteo 
    config:
      source: |
        # Merge the Open-Meteo temp and humidity with the already-merged control and compare temp and humidity data
        temp_hum_w_public_df = pd.merge(
            convert_temp_hum_df[['Hour (ET)', 'Control Temp (F)', 'Compare Temp (F)', 'Control Humidity (RH%)', 'Compare Humidity (RH%)']], 
            simple_open_meteo_df[['Hour (ET)', 'temperature_2m', 'relative_humidity_2m']], 
            on='Hour (ET)'
        )
        temp_hum_w_public_df['Date/Hour'] = temp_hum_w_public_df['Hour (ET)']
        temp_hum_w_public_df['Hour (ET)'] = temp_hum_w_public_df['Hour (ET)'].dt.tz_localize(None)
        temp_hum_w_public_df = temp_hum_w_public_df.rename(columns={'temperature_2m':'Local Outdoor Temp (F)', 'relative_humidity_2m': 'Local Outdoor Humidity (RH%)'})

        temp_hum_w_public_df
  - cellType: CODE
    cellId: 5756870b-7787-4ffc-94e4-4a9f449e9b81 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Capture and Specify when A/C Is On
    config:
      source: |-
        # To better interpret data, detail when A/C is on in Control space
        # A/C goes on at approximately 8pm and off at 7am, except for one overnight away

        ac_start_time = pd.to_datetime('20:00:00').time()
        ac_end_time = pd.to_datetime('07:00:00').time()
        ac_start_away = pd.to_datetime('2024-07-26 16:00:00')
        ac_end_away =  pd.to_datetime('2024-07-27 20:00:00')

        def ac_is_on(date_time):
            eval_date_time = pd.to_datetime(date_time)
            eval_time = eval_date_time.time()
            if ((ac_start_time <= eval_time or eval_time <= ac_end_time) and (ac_start_away >= eval_date_time or eval_date_time >= ac_end_away)):
                return 100
            return 0

        temp_hum_w_public_df['A/C Is On'] = temp_hum_w_public_df['Hour (ET)'].apply(ac_is_on)

        temp_hum_w_public_df
  - cellType: CHARTV2
    cellId: a3163c38-1113-43dd-8503-2fa54074a5cd # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Control, Compare, Local Outdoor Temperatures
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: b8751453-44d3-4d0c-a006-b383a432eee5
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              title: " "
              dataFrameColumn: Hour (ET)
            series:
              - id: 35eed888-f476-4010-bdf8-df761630cabe
                type: line
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - Control Temp (F)
                colorOrder: ascending
                color:
                  type: static
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 2f9f381a-1ba0-45ca-bcbd-754278f5f94f
                type: line
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - Compare Temp (F)
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 7ad69943-c237-43f3-a1ea-1ccec9110c10
                type: line
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - Local Outdoor Temp (F)
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: d1364aac-f77a-4166-91dd-8321d22666dd
                type: area
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - A/C Is On
                colorOrder: ascending
                color:
                  type: static
                  color: "#72B7B2"
                  aggregate: sum
                opacity:
                  type: static
                  value: 0.05
                tooltip:
                  type: auto
                line: true
                point: false
                interpolate: step
                normalize: false
            dataFrame: temp_hum_w_public_df
            seriesGroups:
              - - 35eed888-f476-4010-bdf8-df761630cabe
                - 2f9f381a-1ba0-45ca-bcbd-754278f5f94f
                - 7ad69943-c237-43f3-a1ea-1ccec9110c10
                - d1364aac-f77a-4166-91dd-8321d22666dd
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: chart_result_4
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CHARTV2
    cellId: 02f2dbb1-f908-4fad-9d3e-02573ce8d33f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Control, Compare, Local Outdoor Humidity
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: c634cfea-fadd-4382-bc20-c5a754c38c8d
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              title: " "
              dataFrameColumn: Hour (ET)
            series:
              - id: 698d35de-ef88-41f6-9d4e-c26faa3c9d12
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - Control Humidity (RH%)
                colorOrder: ascending
                color:
                  type: static
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 26bd7442-b9e8-4359-8197-44aebd0fa143
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - Compare Humidity (RH%)
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: edc03549-cec9-4292-a6b1-25060209a0c1
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - Local Outdoor Humidity (RH%)
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 9e5044d1-6052-4ab8-a8c1-084d93d4da4a
                type: area
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - A/C Is On
                colorOrder: ascending
                color:
                  type: static
                  color: "#72B7B2"
                opacity:
                  type: static
                  value: 0.05
                tooltip:
                  type: auto
                line: true
                point: false
                normalize: false
            dataFrame: temp_hum_w_public_df
            seriesGroups:
              - - 698d35de-ef88-41f6-9d4e-c26faa3c9d12
                - 26bd7442-b9e8-4359-8197-44aebd0fa143
                - edc03549-cec9-4292-a6b1-25060209a0c1
                - 9e5044d1-6052-4ab8-a8c1-084d93d4da4a
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: chart_result_5
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CODE
    cellId: 121df1f9-a413-4aa2-af11-e5c08f928cd5 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Calculate the difference between Control v Compare and Control v Outdoors
    config:
      source: |-
        # Calculate the differences in temperature between Control vs Compare and Control vs Outdoors
        compare_temp_df = temp_hum_w_public_df[['Hour (ET)', 'Control Temp (F)', 'Compare Temp (F)', 'Local Outdoor Temp (F)' ]].copy()
        compare_temp_df.loc[:, 'Compare - Control'] = (compare_temp_df['Compare Temp (F)'] - compare_temp_df['Control Temp (F)']).round(2)
        compare_temp_df.loc[:, 'Outdoor - Control'] = (compare_temp_df['Local Outdoor Temp (F)'] - compare_temp_df['Control Temp (F)']).round(2)
        compare_temp_df.loc[:, 'Control'] = 0

        compare_temp_df
  - cellType: CHARTV2
    cellId: 4734d235-b068-4e4b-8c4a-041e49634a08 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Visualization of Differences in Temperatures Between Control and Compare, Control and Outdoors
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: b862e84d-2f14-4a7b-963c-068aadc4fbfd
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              title: " "
              dataFrameColumn: Hour (ET)
            series:
              - id: 13342c35-3f48-4c53-8728-79373e22da60
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Degrees Difference (F)
                dataFrameColumns:
                  - Control
                colorOrder: ascending
                color:
                  type: static
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: f400bca8-6648-4605-bcd9-7a70fcb63bb4
                type: area
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Degrees Difference (F)
                dataFrameColumns:
                  - Compare - Control
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                line: true
                point: false
                normalize: false
              - id: de47f6db-70c5-43de-928f-a634b6ec31fe
                type: area
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Degrees Difference (F)
                dataFrameColumns:
                  - Outdoor - Control
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                line: true
                point: false
                normalize: false
            dataFrame: compare_temp_df
            seriesGroups:
              - - 13342c35-3f48-4c53-8728-79373e22da60
                - f400bca8-6648-4605-bcd9-7a70fcb63bb4
                - de47f6db-70c5-43de-928f-a634b6ec31fe
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: chart_result_6
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CODE
    cellId: 9408710a-0041-4668-bd96-5a7c0d299571 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Reduce Temperature to  Peak Sunny Periods
    config:
      source: |
        # Reduce temperature to afternoon periods only
        peak_sun_start = pd.to_datetime('11:00:00').time()
        peak_sun_end = pd.to_datetime('19:00:00').time()

        peak_sun_temp_df = compare_temp_df.copy()
        peak_sun_temp_df = compare_temp_df.drop(columns=['Control'])
        peak_sun_temp_df['time'] = peak_sun_temp_df['Hour (ET)'].dt.time
        peak_sun_temp_df = peak_sun_temp_df[(peak_sun_temp_df['time'] >= peak_sun_start) & (peak_sun_temp_df['time'] <= peak_sun_end)]

        average_peak_compare_diff = peak_sun_temp_df['Compare - Control'].mean().round(2)
        average_peak_outdoor_diff = peak_sun_temp_df['Outdoor - Control'].mean().round(2)
        peak_sun_temp_df
  - cellType: CODE
    cellId: 3877d1d0-8cf1-4d4d-82c1-702b83fc93a2 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Calculate Statistics on Differences Between Control and Outdoors and Control and Compare 
    config:
      source: |
        # Calculate overall average, range,and avg during afternoon
        # TODO - CONTINUE/IMPROVE

        def diffs_stats(inputs, display, peak_avg):
            average_diff = inputs.mean().round(2)
            min_diff = round(inputs.min(), 2)
            max_diff = round(inputs.max(), 2)

            return [
                    {
                    'Compared to:': display,
                    'Average Difference (F)': average_diff,
                    'Difference Cooler than Control (F)': min_diff,
                    'Difference Warmer than Control (F)': max_diff,
                    'Average Difference During Afternoon (F)': peak_avg
                }
            ]

        diffs_compare = diffs_stats(compare_temp_df.loc[:, 'Compare - Control'], 'Compare', average_peak_compare_diff)
        diffs_outdoor = diffs_stats(compare_temp_df.loc[:, 'Outdoor - Control'], 'Outdoors', average_peak_outdoor_diff)

        diffs_summary = []
        diffs_summary.extend(diffs_outdoor)
        diffs_summary.extend(diffs_compare)
        diffs_summary_df = pd.DataFrame(diffs_summary)
        diffs_summary_df
  - cellType: CODE
    cellId: 74ae549c-0880-41b1-9950-d62720dc22ab # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: TODO/IDEAS
    config:
      source: |
        # TODO / IDEAS
        # 1 Look at average per day
        # 2 Average data across days but for single hour ranges like 2-3pm. X axis 24 hours. Grouped column chart

        # Heat Index formula:
        # HI = -42.379 + 2.04901523*T + 10.14333127*RH - .22475541*T*RH - .00683783*T*T - .05481717*RH*RH + .00122874*T*T*RH + .00085282*T*RH*RH - .00000199*T*T*RH*RH
        # Maybe visualize Candlestick like a bar chart
  - cellType: MARKDOWN
    cellId: 95bb4909-ae7a-41e1-8efe-da6a1832ab41 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Notes
    config:
      source: |-
        ## Notes
        ### Data Sources
        #### Temperature/humidity/pressure sensor
        * Adafruit BME280 I2C or SPI Temperature Humidity Pressure Sensor - STEMMA QT
        * https://www.adafruit.com/product/2652

        #### CO2, Temperature, & humidity sensor
        * Adafruit SCD-40 - True CO2, Temperature and Humidity Sensor - STEMMA QT / Qwiic
        * https://www.adafruit.com/product/5187

        #### Weather Data from Open-Meteo
        * https://open-meteo.com/en/docs
  - cellType: CHARTV2
    cellId: 5d4c42bf-1488-4c65-8957-a31c0421e310 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: CO2
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: bdc46731-648c-4b7b-a049-dbc29bc48f0f
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              dataFrameColumn: hour
            series:
              - id: 2b8633b8-65ce-4011-b1f3-4f24907f6d27
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - CO2 (ppm) - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#EECA3B"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
            dataFrame: hourly_data
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: filter_result_2
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CHARTV2
    cellId: 520337fc-0303-41b6-bd65-360c09f0e159 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Temperature
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: f5012dad-f646-45eb-bc01-f933b22347f4
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              dataFrameColumn: hour
            series:
              - id: a5265a96-ed7e-42c1-9608-f44d3e0e39e6
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - Temperature (C) - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
            dataFrame: hourly_data
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: filter_result_4
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CHARTV2
    cellId: c0078917-a190-453d-9eea-5706b81d56b7 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Relative Humidity
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: f5012dad-f646-45eb-bc01-f933b22347f4
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              dataFrameColumn: hour
            series:
              - id: a5265a96-ed7e-42c1-9608-f44d3e0e39e6
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - Relative Humidity (%) - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
            dataFrame: hourly_data
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: filter_result_3
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CHARTV2
    cellId: 42fbb867-7b6b-4580-853f-f8ee029a6e15 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Particulate Matter (Control)
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: 0f285cb7-ee93-43f8-b349-98ee9405470d
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              dataFrameColumn: hour
            series:
              - id: e819f488-f9b4-496b-bbd3-0958c91640a1
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - PM2.5 - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#72B7B2"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 48bede61-da53-4f19-a9d1-4d43efb40f45
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - PM10.0 - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#4C78A8"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
            dataFrame: hourly_data
            seriesGroups:
              - - e819f488-f9b4-496b-bbd3-0958c91640a1
                - 48bede61-da53-4f19-a9d1-4d43efb40f45
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: filter_result_6
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CHARTV2
    cellId: f5db2241-1b07-47ba-b4f5-6a2bcffc8877 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Battery voltage and percentage
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: f5012dad-f646-45eb-bc01-f933b22347f4
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              dataFrameColumn: hour
            series:
              - id: a5265a96-ed7e-42c1-9608-f44d3e0e39e6
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - Battery (V) - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#54A24B"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: d85ca06e-0b6d-4ad9-83af-424b669ed0f9
                type: line
                axis:
                  type: number
                  style:
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - Battery (%) - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#4C78A8"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
            dataFrame: hourly_data
            seriesGroups:
              - - a5265a96-ed7e-42c1-9608-f44d3e0e39e6
              - - d85ca06e-0b6d-4ad9-83af-424b669ed0f9
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: filter_result_5
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: TEXT
    cellId: 6f0ade84-75fa-4e99-92a4-53a01fb61e6d # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: h3
          children:
            - text: "Coding Level 0-1: Done!"
        - type: paragraph
          children:
            - text: "If you're at coding level 0 or 1: Congrats, you made it through the code!"
              italic: true
        - type: paragraph
          children:
            - text: ""
        - type: paragraph
          children:
            - text: "Take a look through the data from the various devices and see if you spot any interesting trends or surprising data points. Here are some ideas:"
        - type: ul
          children:
            - type: li
              children:
                - type: lic
                  children:
                    - text: Do you notice any trends, e.g. daily fluctuations?
            - type: li
              children:
                - type: lic
                  children:
                    - text: "Compare CO2 measurements inside (device ID: jaimecurtis-co2-temperature) vs. outside (device ID: jasoncurtis-co2-airquality). "
            - type: li
              children:
                - type: lic
                  children:
                    - text: The average global outdoor CO2 concentration is 400pm - you're probably seeing numbers much higher than this. Why?
            - type: li
              children:
                - type: lic
                  children:
                    - text: ...?
        - type: paragraph
          children:
            - text: ""
        - type: paragraph
          children:
            - text: "In your Assignment submission on the Terra.do app:"
        - type: ol
          children:
            - type: li
              children:
                - type: lic
                  children:
                    - text: Link to your copy of this notebook
            - type: li
              children:
                - type: lic
                  children:
                    - text: Write up a few sentences summarizing your interesting finding
  - cellType: TEXT
    cellId: 8ac8f672-acb6-4d34-b705-9cc47f466f0f # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: null
    config:
      richText:
        - type: h3
          children:
            - text: "Coding Level 2-3: Carry on!"
        - type: paragraph
          children:
            - text: If you have strong programming experience, use this as a starting point and modify or expand this notebook.
              italic: true
        - type: paragraph
          children:
            - text: ""
        - type: paragraph
          children:
            - text: "What you choose to do next might depend on whether you have your own device at home. Here are some ideas:"
        - type: ul
          children:
            - type: li
              children:
                - type: lic
                  children:
                    - text: If you have your own device, consider different locations to place it (inside, outside, next to a plant, etc)
            - type: li
              children:
                - type: lic
                  children:
                    - text: Fetch recorded weather data for a given location and compare to the data collected locally on a device
            - type: li
              children:
                - type: lic
                  children:
                    - text: Combine this data with some other public data
            - type: li
              children:
                - type: lic
                  children:
                    - text: "Configure an alert when some piece of sensor data goes above or below a specified level. "
                - type: ul
                  children:
                    - type: li
                      children:
                        - type: lic
                          children:
                            - text: For example, you could create yourself an outdoor air quality warning alert (good for the next cycle of wildfires!)
                    - type: li
                      children:
                        - type: lic
                          children:
                            - text: Or, an indoor carbon dioxide concentration alert (e.g. time to open a window)
            - type: li
              children:
                - type: lic
                  children:
                    - text: "Bidirectional data flow: Access some data (from our DB or the internet) and use it to control the neopixel LED on your device or display info on screen"
            - type: li
              children:
                - type: lic
                  children:
                    - text: Try joining an existing crowd-sourced air sensor network, e.g. Purple Air
            - type: li
              children:
                - type: lic
                  children:
                    - text: Interpret indoor CO2 sensor data as a "room occupancy" indicator
            - type: li
              children:
                - type: lic
                  children:
                    - text: ...?
        - type: p
          children:
            - text: ""
        - type: paragraph
          children:
            - text: "In your Assignment submission on the Terra.do app:"
        - type: ol
          children:
            - type: li
              children:
                - type: lic
                  children:
                    - text: Link to your copy of this notebook
            - type: li
              children:
                - type: lic
                  children:
                    - text: Write up a few sentences summarizing your interesting finding
appLayout:
  visibleMetadataFields:
    - DESCRIPTION
    - AUTHOR
    - LAST_EDITED
    - LAST_RUN
    - CATEGORIES
    - STATUS
    - TABLE_OF_CONTENTS
    - NAME
  fullWidth: false
  tabs:
    - name: Tab 1
      rows:
        - columns:
            - start: 0
              end: 30
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 10add66c-006f-43f9-a572-f9b2770c4bda
                  sharedFilterId: null
                  height: null
                  showLabel: true
            - start: 30
              end: 60
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 25b19271-0df6-42ee-870c-28250c6972c3
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 356dea02-028f-493c-a737-fd686f5b5d57
                  sharedFilterId: null
                  height: null
                  showLabel: true
sharedFilters: []
