schemaVersion: 3
meta:
  sourceVersionId: a6f24aee-c376-4104-ac8a-8341c8fc4503 # DO NOT CHANGE - Hex uses this to match up project versions when reimporting the file
  description: The project analyzes the impact of blackout cellular shades on indoor temperature and humidity by comparing data from control and compare sensors with local historical weather data. It visualizes the differences and highlights factors like A/C use to determine the shades' effectiveness.
  projectId: dac917e3-bc06-472a-a214-167419a9fa8c # DO NOT CHANGE - Unique ID of the project from which this file was generated
  title: "Throw No Shade: Shades Lower Temperatures "
  timezone: null
  appTheme: SYS_PREF
  codeLanguage: PYTHON
  status:
    name: In development
  categories: []
  castDecimalsDefault: true
  logicQueryCacheTimeout:
    type: disabled
  publishedQueryCacheTimeout:
    type: disabled
  hexType: PROJECT
  allowExecutionReordering: true
  prerunApp: false
  cachePublishedAppState: true
  refreshStalePublishedApp: false
  autoRerunApp: true
projectAssets:
  dataConnections: []
  envVars: []
  secrets: []
sharedAssets:
  secrets: []
  vcsPackages: []
  dataConnections:
    - dataConnectionId: e8480949-7368-449c-b922-66d0c52bbad0 # Supabase (postgres)
  externalFileIntegrations: []
cells:
  - cellType: MARKDOWN
    cellId: af04f885-156f-4d6f-b27b-0c19d41d2198 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Goal, Strategy, Findings
    config:
      source: |-
        # Goal
        Show the impact of blackout cellular shades. 

        # Strategy 
        Collect temperature and humidity data from:
         1) "Control" sensor - Placed in the middle of the room where shades are always closed 
         2) "Compare" sensor - Placed on the interior of a window, on the sunny side of the shades
         3) Public local historical weather API
         
        Show temperature and relative humidity over time for Control, Compare, Local Weather
        * Indicate meaningful factors like A/C use

        Show differences in temperature and relative humidity between Control (interior of shaded room), Compare (inside window but on sunny side of shades), and the Outdoors 

        # Findings
        * During warm afternoons, on average, when the shades are closed, the interior of the room is 3.7°F cooler compared to outdoors.  
        * With energy efficient windows but no shades, the room would be only 0.5°F cooler compared to outdoors.
        * On the hottest days, closing the shades can cool the room by up to 14.2°F. 
        * Using energy efficient windows alone would cool the room only 9.4°F compared to outdoors.
        * A/C use produces a significant decrease in humidity 
  - cellType: CODE
    cellId: 0f819351-0cdc-4620-8808-c29ed9eba3c7 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Import Libraries
    config:
      source: |-
        import pandas as pd
        import pytz
        import json
  - cellType: CODE
    cellId: e180e443-8737-4e40-b72c-191ab8fc57b0 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Read Censor Data from Saved CSVs
    config:
      source: |
        # Data was captured from Arduino Adafruit Temperature and Humidity Sensors in July 2024
        # Import saved sensor data from CSVs
        # Compare Sensor - Against window in direct sun
        hourly_data_compare_csv = 'raw_sensor-2024-08-13_compare.csv'
        hourly_data_compare = pd.read_csv(hourly_data_compare_csv)
        hourly_data_compare['hour'] = pd.to_datetime(hourly_data_compare['hour']) # Convert to datetime

        # Control Sensor - Interior of room with shades pulled down
        hourly_data_csv = 'raw_sensor-2024-08-13_control.csv'
        hourly_data = pd.read_csv(hourly_data_csv)
        hourly_data['hour'] = pd.to_datetime(hourly_data['hour']) # Convert to datetime
  - cellType: CODE
    cellId: c5bf4007-6d4e-448e-86a3-4b6d7b070211 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Convert Date(s) and Time(s) to Standardized ET Format
    config:
      source: |
        # Convert times to Standardized ET Format
        def convert_time_ET(times):

            new_times = pd.to_datetime(times)
            if isinstance(new_times, pd.Series):
                if new_times.dt.tz is None:
                    new_times = times.dt.tz_localize('UTC')
                new_times = new_times.dt.tz_convert('US/Eastern')
            else:    
                if new_times.tzinfo is None:
                    new_times = times.tz_localize('UTC')

                new_times = new_times.tz_convert('US/Eastern')

            return new_times

        # Identify the common start and end times for both data sets
        hourly_compare_start = hourly_data_compare['hour'].min()
        hourly_compare_end = hourly_data_compare['hour'].max()
        hourly_start = hourly_data['hour'].min()
        hourly_end = hourly_data['hour'].max()
        time_range_start = max(hourly_compare_start, hourly_start)
        time_range_end = min(hourly_compare_end, hourly_end)

        time_range_start_ET = convert_time_ET(time_range_start)
        time_range_end_ET = convert_time_ET(time_range_end)
  - cellType: CODE
    cellId: 1845ce70-26d4-4f3a-bc9b-5066fd36b9b2 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Reduce Control Data and Compare Data and Merge into Combined Data Frame 
    config:
      source: |-
        # Reduce and clarify data from sensors
        def simplify_sql_to_df(query_results, display): 
            simplifed_df = pd.DataFrame(query_results)
            simplifed_df = simplifed_df[['hour', 'Temperature (C) - median', 'Relative Humidity (%) - median', 'Battery (%) - median']]
            simplifed_df = simplifed_df.rename(
                columns={'Temperature (C) - median': f'{display} Temp (C)', 
                'Relative Humidity (%) - median': f'{display} Humidity (RH%)', 
                'Battery (%) - median':f'{display} Battery (%)'}
                )
            return simplifed_df

        # Create merged data frame of Control and Compare data from reduced data sets
        temp_hum_control_df = simplify_sql_to_df(hourly_data, 'Control')
        temp_hum_compare_df = simplify_sql_to_df(hourly_data_compare, 'Compare')

        temp_hum_combined_df = pd.merge(
            temp_hum_control_df[['hour', 'Control Temp (C)', 'Control Humidity (RH%)']], 
            temp_hum_compare_df[['hour', 'Compare Temp (C)', 'Compare Humidity (RH%)']], 
            on='hour'
        )

        temp_hum_combined_df
  - cellType: CODE
    cellId: 5c269e44-b34c-4932-82e3-96320ddbb042 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Convert Control and Compare  Data to Fahrenheit and Eastern Time
    config:
      source: |
        convert_temp_hum_df = temp_hum_combined_df.copy()

        # Convert times to ET
        convert_temp_hum_df['Hour (ET)'] = convert_time_ET(convert_temp_hum_df['hour'])    

        # Convert temperature from Celsius to Fahrenheit
        def convert_temp_F(temperatures):
            new_temperatures = (temperatures * 1.8) + 32
            return new_temperatures

        convert_temp_hum_df['Control Temp (F)'] = convert_temp_F(convert_temp_hum_df['Control Temp (C)'])
        convert_temp_hum_df['Compare Temp (F)'] = convert_temp_F(convert_temp_hum_df['Compare Temp (C)'])
        convert_temp_hum_df
  - cellType: CODE
    cellId: 4e696978-05c8-4a3f-b88a-a92f110aab41 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Get Historical Local Weather Data from Open-Meteo
    config:
      source: |-
        # Get historical local weather data from Open-Meteo
        lat_api = 40.62993477126549
        lon_api = -74.03587065767233

        # Previously when data was being retreived hourly, weather data was retreived/downloaded using Open-Meteo API
        # import requests
        # date_start_API = time_range_start_ET.date()
        # date_end_API = time_range_end_ET.date()
        # url = f'https://api.open-meteo.com/v1/forecast?latitude={lat_api}&longitude={lon_api}&hourly=temperature_2m,relative_humidity_2m&temperature_unit=fahrenheit&timezone=UTC&start_date={date_start_API}&end_date={date_end_API}'
        # response = requests.get(url)
        # if response.status_code == 200:
        #     json_data = response.json()
        #     open_meteo_df = pd.DataFrame(json_data)       
        #     # Save the JSON data to a file
        #     with open('open-meteo_data.json', 'w') as file:
        #         json.dump(json_data, file, indent=4)
        # else:
        #     print(f"Error: {response.status_code}")

        # Since data is historical, use downloaded JSON data
        json_dl_file = open('open-meteo_data_2024-08-13.json')
        json_dl_data = json.load(json_dl_file)
        open_meteo_df = pd.DataFrame(json_dl_data)

        open_meteo_df
  - cellType: CODE
    cellId: 9e4a9614-bab2-42a5-971e-af93fa233f59 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Reduce and Flatten Temperature and Humidity Data from Open-Meteo 
    config:
      source: |-
        # Reduce and flatten Open-Meteo Data
        open_meteo_df_initial = pd.DataFrame(open_meteo_df['hourly'])

        simple_open_meteo_df = pd.DataFrame({
            'time': open_meteo_df_initial['hourly']['time'],
            'temperature_2m': open_meteo_df_initial['hourly']['temperature_2m'],
            'relative_humidity_2m': open_meteo_df_initial['hourly']['relative_humidity_2m']
        })

        simple_open_meteo_df['Hour (ET)'] = convert_time_ET(pd.to_datetime(simple_open_meteo_df['time']))

        simple_open_meteo_df
  - cellType: CODE
    cellId: c5f8a869-c9ff-4e56-85a8-0e4ead70a1d4 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Merge Temperatures and Humidity Data from Control and Compare Sensors and Open-Meteo 
    config:
      source: |-
        # Merge the Open-Meteo temp and humidity with the already-merged control and compare temp and humidity data
        temp_hum_w_public_df = pd.merge(
            convert_temp_hum_df[['Hour (ET)', 'Control Temp (F)', 'Compare Temp (F)', 'Control Humidity (RH%)', 'Compare Humidity (RH%)']], 
            simple_open_meteo_df[['Hour (ET)', 'temperature_2m', 'relative_humidity_2m']], 
            on='Hour (ET)'
        )
        temp_hum_w_public_df['Date/Hour'] = temp_hum_w_public_df['Hour (ET)']
        temp_hum_w_public_df['Hour (ET)'] = temp_hum_w_public_df['Hour (ET)'].dt.tz_localize(None)
        temp_hum_w_public_df = temp_hum_w_public_df.rename(columns={'temperature_2m':'Local Outdoor Temp (F)', 'relative_humidity_2m': 'Local Outdoor Humidity (RH%)'})

        temp_hum_w_public_df
  - cellType: CODE
    cellId: 5296cb8f-3405-4367-b8e0-9b015aeb7af9 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Capture and Specify when A/C Is On
    config:
      source: |-
        # To better interpret data, detail when A/C is in use
        # Estimate that A/C goes on at approximately 8pm and off at 7am, except for one overnight away

        ac_start_time = pd.to_datetime('20:00:00').time()
        ac_end_time = pd.to_datetime('07:00:00').time()
        ac_start_away = pd.to_datetime('2024-07-26 16:00:00')
        ac_end_away =  pd.to_datetime('2024-07-27 20:00:00')

        def ac_is_on(date_time):
            eval_date_time = pd.to_datetime(date_time)
            eval_time = eval_date_time.time()
            if ((ac_start_time <= eval_time or eval_time <= ac_end_time) and (ac_start_away >= eval_date_time or eval_date_time >= ac_end_away)):
                return 100
            return 0

        temp_hum_w_public_df['A/C Is On'] = temp_hum_w_public_df['Hour (ET)'].apply(ac_is_on)

        temp_hum_w_public_df
  - cellType: CHARTV2
    cellId: ab08b877-f28b-441b-a665-c0079313c6dd # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Control, Compare, Local Outdoor Temperatures
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: b8751453-44d3-4d0c-a006-b383a432eee5
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              title: " "
              dataFrameColumn: Hour (ET)
            series:
              - id: 35eed888-f476-4010-bdf8-df761630cabe
                type: line
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - Control Temp (F)
                colorOrder: ascending
                color:
                  type: static
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 2f9f381a-1ba0-45ca-bcbd-754278f5f94f
                type: line
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - Compare Temp (F)
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 7ad69943-c237-43f3-a1ea-1ccec9110c10
                type: line
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - Local Outdoor Temp (F)
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: d1364aac-f77a-4166-91dd-8321d22666dd
                type: area
                axis:
                  type: number
                  style:
                    min: 64
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Temperature (F)
                dataFrameColumns:
                  - A/C Is On
                colorOrder: ascending
                color:
                  type: static
                  color: "#72B7B2"
                  aggregate: sum
                opacity:
                  type: static
                  value: 0.05
                tooltip:
                  type: auto
                line: true
                point: false
                interpolate: step
                normalize: false
            dataFrame: temp_hum_w_public_df
            seriesGroups:
              - - 35eed888-f476-4010-bdf8-df761630cabe
                - 2f9f381a-1ba0-45ca-bcbd-754278f5f94f
                - 7ad69943-c237-43f3-a1ea-1ccec9110c10
                - d1364aac-f77a-4166-91dd-8321d22666dd
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: chart_result_4
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CHARTV2
    cellId: d9f810db-b12b-48bd-a075-06e96f778b5e # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Control, Compare, Local Outdoor Humidity
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: c634cfea-fadd-4382-bc20-c5a754c38c8d
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              title: " "
              dataFrameColumn: Hour (ET)
            series:
              - id: 698d35de-ef88-41f6-9d4e-c26faa3c9d12
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - Control Humidity (RH%)
                colorOrder: ascending
                color:
                  type: static
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 26bd7442-b9e8-4359-8197-44aebd0fa143
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - Compare Humidity (RH%)
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: edc03549-cec9-4292-a6b1-25060209a0c1
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - Local Outdoor Humidity (RH%)
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: 9e5044d1-6052-4ab8-a8c1-084d93d4da4a
                type: area
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Relative Humidity (%)
                dataFrameColumns:
                  - A/C Is On
                colorOrder: ascending
                color:
                  type: static
                  color: "#72B7B2"
                opacity:
                  type: static
                  value: 0.05
                tooltip:
                  type: auto
                line: true
                point: false
                normalize: false
            dataFrame: temp_hum_w_public_df
            seriesGroups:
              - - 698d35de-ef88-41f6-9d4e-c26faa3c9d12
                - 26bd7442-b9e8-4359-8197-44aebd0fa143
                - edc03549-cec9-4292-a6b1-25060209a0c1
                - 9e5044d1-6052-4ab8-a8c1-084d93d4da4a
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: chart_result_5
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CODE
    cellId: 0264f835-dbd3-44ac-ac92-41feea2a9721 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Calculate the difference between Control v Compare and Control v Outdoors
    config:
      source: |-
        # Calculate the differences in temperature between Control vs Compare and Control vs Outdoors
        compare_temp_df = temp_hum_w_public_df[['Hour (ET)', 'Control Temp (F)', 'Compare Temp (F)', 'Local Outdoor Temp (F)' ]].copy()
        compare_temp_df.loc[:, 'Compare - Control'] = (compare_temp_df['Compare Temp (F)'] - compare_temp_df['Control Temp (F)']).round(2)
        compare_temp_df.loc[:, 'Outdoor - Control'] = (compare_temp_df['Local Outdoor Temp (F)'] - compare_temp_df['Control Temp (F)']).round(2)
        compare_temp_df.loc[:, 'Outdoor - Compare'] = (compare_temp_df['Local Outdoor Temp (F)'] - compare_temp_df['Compare Temp (F)']).round(2)
        compare_temp_df.loc[:, 'Control'] = 0

        compare_temp_df
  - cellType: CHARTV2
    cellId: 59d9fd35-1fcc-45f1-85d5-004758986f9e # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Visualization of Differences in Temperatures Between Control and Compare, Control and Outdoors
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: b862e84d-2f14-4a7b-963c-068aadc4fbfd
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              title: " "
              dataFrameColumn: Hour (ET)
            series:
              - id: 13342c35-3f48-4c53-8728-79373e22da60
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Degrees Difference (F)
                dataFrameColumns:
                  - Control
                colorOrder: ascending
                color:
                  type: static
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
              - id: f400bca8-6648-4605-bcd9-7a70fcb63bb4
                type: area
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Degrees Difference (F)
                dataFrameColumns:
                  - Compare - Control
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                line: true
                point: false
                normalize: false
              - id: de47f6db-70c5-43de-928f-a634b6ec31fe
                type: area
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                  title: Degrees Difference (F)
                dataFrameColumns:
                  - Outdoor - Control
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                line: true
                point: false
                normalize: false
            dataFrame: compare_temp_df
            seriesGroups:
              - - 13342c35-3f48-4c53-8728-79373e22da60
                - f400bca8-6648-4605-bcd9-7a70fcb63bb4
                - de47f6db-70c5-43de-928f-a634b6ec31fe
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: chart_result_6
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CODE
    cellId: 755c1d74-f793-4610-8271-350e34a0c844 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Reduce Temperature Data to  Typical Peak Sunny Periods and Temperature Greater than 76°
    config:
      source: |
        # Reduce temperature to afternoon periods only
        peak_sun_start = pd.to_datetime('11:00:00').time()
        peak_sun_end = pd.to_datetime('19:00:00').time()

        peak_sun_temp_df = compare_temp_df.copy()
        peak_sun_temp_df = compare_temp_df.drop(columns=['Control'])
        peak_sun_temp_df['time'] = peak_sun_temp_df['Hour (ET)'].dt.time
        peak_sun_temp_df = peak_sun_temp_df[(peak_sun_temp_df['time'] >= peak_sun_start) & (peak_sun_temp_df['time'] <= peak_sun_end)]

        # Reduce to when Local Outdoor Temp is greater than 75
        peak_sun_temp_df = peak_sun_temp_df[(peak_sun_temp_df['Local Outdoor Temp (F)'] > 76.0)]

        average_peak_compare_diff = peak_sun_temp_df['Compare - Control'].mean().round(2)
        average_peak_outdoor_diff = peak_sun_temp_df['Outdoor - Control'].mean().round(2)
        peak_sun_temp_df
  - cellType: CODE
    cellId: 6da652a5-62cd-4afa-815b-483dfc170bb5 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Calculate Statistics on Differences Between Control and Outdoors and Control and Compare 
    config:
      source: |
        # Calculate overall average, range,and avg during afternoons, above 76°F
        def diffs_stats(inputs, display, peak_avg):
            average_diff = inputs.mean().round(2)
            max_diff = round(inputs.max(), 2)

            return [
                    {
                    '': display,
                    'Average Difference with Control, Warm Afternoons (°F)': peak_avg,
                    'Max Difference Warmer than Control (°F)': max_diff
                }
            ]

        diffs_compare = diffs_stats(peak_sun_temp_df.loc[:, 'Compare - Control'], 'Compare (in Sunlight)', average_peak_compare_diff)
        diffs_outdoor = diffs_stats(peak_sun_temp_df.loc[:, 'Outdoor - Control'], 'Outdoors', average_peak_outdoor_diff)

        diffs_summary = []
        diffs_summary.extend(diffs_outdoor)
        diffs_summary.extend(diffs_compare)
        diffs_summary_df = pd.DataFrame(diffs_summary)
        print(f'''During warm afternoons, on average, when the shades are closed, the interior of the room is {average_peak_outdoor_diff:.1f}°F cooler compared to outdoors.  
        With energy efficient windows but no shades, the room would be only {average_peak_outdoor_diff - average_peak_compare_diff:.1f}°F cooler compared to outdoors.''')
        print(f'''On the hottest days, closing the shades can cool the room by up to {diffs_summary_df.iloc[0,2]:.1f}°F. 
        Using energy efficient windows alone would cool the room only {diffs_summary_df.iloc[1,2]:.1f}°F compared to outdoors.''')
        diffs_summary_df
  - cellType: CODE
    cellId: 205b962a-5aa2-463d-8abc-0d4948a0028c # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: TODO/IDEAS
    config:
      source: |
        # Heat Index formula:
        # HI = -42.379 + 2.04901523*T + 10.14333127*RH - .22475541*T*RH - .00683783*T*T - .05481717*RH*RH + .00122874*T*T*RH + .00085282*T*RH*RH - .00000199*T*T*RH*RH
  - cellType: MARKDOWN
    cellId: fd9e20ed-e8ea-46e1-bf31-a28ac8f0ec54 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Data Sources
    config:
      source: |-
        ### Data Sources
        #### Temperature/humidity/pressure sensor
        * Adafruit BME280 I2C or SPI Temperature Humidity Pressure Sensor - STEMMA QT
        * https://www.adafruit.com/product/2652

        #### CO2, Temperature, & humidity sensor
        * Adafruit SCD-40 - True CO2, Temperature and Humidity Sensor - STEMMA QT / Qwiic
        * https://www.adafruit.com/product/5187

        #### Weather Data from Open-Meteo
        * https://open-meteo.com/en/docs
  - cellType: CHARTV2
    cellId: 29db6c94-0a2e-4605-b203-dbab6d08ac74 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Temperature
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: f5012dad-f646-45eb-bc01-f933b22347f4
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              dataFrameColumn: hour
            series:
              - id: a5265a96-ed7e-42c1-9608-f44d3e0e39e6
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - Temperature (C) - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#E45756"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
            dataFrame: hourly_data
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: filter_result_4
      outputResult: false
      displayType: CHART
      displayTableConfig: null
  - cellType: CHARTV2
    cellId: 950300c7-93d8-4431-b7bd-07ea72066195 # DO NOT CHANGE - Hex uses this to match up cells when reimporting the file, and detect any changes to existing cells
    cellLabel: Relative Humidity
    config:
      height: null
      chartSpec:
        type: layered
        layers:
          - id: f5012dad-f646-45eb-bc01-f933b22347f4
            xAxis:
              type: datetime
              style:
                grid:
                  style: solid
                ticks: {}
                labels: {}
              dataFrameColumn: hour
            series:
              - id: a5265a96-ed7e-42c1-9608-f44d3e0e39e6
                type: line
                axis:
                  type: number
                  style:
                    grid:
                      style: solid
                    ticks: {}
                    labels: {}
                dataFrameColumns:
                  - Relative Humidity (%) - median
                colorOrder: ascending
                color:
                  type: static
                  color: "#F58518"
                opacity:
                  type: static
                  value: 1
                tooltip:
                  type: auto
                point: false
                stroke: solid
            dataFrame: hourly_data
        settings:
          legend:
            position: right
          tooltip: true
          selectionEnabled: false
      chartSelection: {}
      colorMappings: {}
      resultVariable: filter_result_3
      outputResult: false
      displayType: CHART
      displayTableConfig: null
appLayout:
  visibleMetadataFields:
    - DESCRIPTION
    - AUTHOR
    - LAST_EDITED
    - LAST_RUN
    - CATEGORIES
    - STATUS
    - TABLE_OF_CONTENTS
    - NAME
  fullWidth: false
  tabs:
    - name: Tab 1
      rows:
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: af04f885-156f-4d6f-b27b-0c19d41d2198
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: ab08b877-f28b-441b-a665-c0079313c6dd
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: d9f810db-b12b-48bd-a075-06e96f778b5e
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 59d9fd35-1fcc-45f1-85d5-004758986f9e
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: 6da652a5-62cd-4afa-815b-483dfc170bb5
                  sharedFilterId: null
                  height: null
                  showLabel: true
        - columns:
            - start: 0
              end: 120
              elements:
                - showSource: false
                  hideOutput: false
                  type: CELL
                  cellId: fd9e20ed-e8ea-46e1-bf31-a28ac8f0ec54
                  sharedFilterId: null
                  height: null
                  showLabel: true
sharedFilters: []
